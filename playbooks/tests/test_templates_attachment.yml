# Copyright 2024 Cisco Systems, Inc. and its affiliates
# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

---

# Helper playbooks to test modules and flows while developing them

# Tested operations:

# --- Device Templates attachment - from --- #


- name: Testing playbook to verify cisco.catalystwan.device_templates module operations
  hosts: localhost
  gather_facts: false
  vars_files:
    - configuration_file_dev_vars.yml
  vars:
    manager_authentication: &manager_authentication
      url: "{{ (vmanage_instances | first).mgmt_public_ip }}"
      username: "{{ (vmanage_instances | first).admin_username }}"
      password: "{{ (vmanage_instances | first).admin_password }}"
  tasks:
    - name: Backup running-config from devices, store in default backup dir (in CWD)
      cisco.catalystwan.devices_info:
        backup: true
        manager_credentials:
          <<: *manager_authentication
      register: backup_info

    - name: Using backup files, create CLI templates for each device available
      cisco.catalystwan.cli_templates:
        state: present
        template_name: "backup-template-{{ device_item.filename }}"
        template_description: "Template for {{ device_item.hostname }} created from backup file."
        config_file: "{{ device_item.backup_path }}"
        device_model: "{% if 'cedge' in device_item.hostname %}vedge-C8000V\
                       {% elif 'vSmart' in device_item.hostname %}vsmart{% elif 'vManage' in device_item.hostname %}vmanage\
                       {% elif 'vBond' in device_item.hostname %}vedge-cloud{% endif %}"
        manager_credentials:
          <<: *manager_authentication
      loop: "{{ backup_info.backup_paths }}"
      loop_control:
        loop_var: device_item
      when: backup_info.backup_paths | length > 0

    - name: Get all Non-Default Feature Templates available
      cisco.catalystwan.feature_templates_info:
        filters:
          factory_default: false
        manager_credentials:
          <<: *manager_authentication
      register: feature_templates

    - name: Delete all Non-Default Feature templates
      cisco.catalystwan.feature_templates:
        state: absent
        template_name: "{{ template.templateName }}"
        manager_credentials:
          <<: *manager_authentication
      loop: "{{ feature_templates.templates_info | default([], true) }}"
      loop_control:
        loop_var: template
        label: "template: {{ template.templateName }}"

    # Create now all Feature Templates that are necessary to form minimal Device Template, and attach this template
