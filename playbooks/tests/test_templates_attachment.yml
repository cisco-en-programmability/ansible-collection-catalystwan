# Copyright 2024 Cisco Systems, Inc. and its affiliates
# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

---

# --- Device Templates attachment - created from Feature Templates--- #

# Helper playbooks to test modules and flows while developing them

# Tested operations:

# 1. Get all Device Templates that are not attached to any device
# 2. Delete selected Device Templates from Manager
# 3. Backup running-config from devices, store in default backup dir (in CWD)
# 4. Using backup files, create CLI templates for each device available
# 5. Get all Non-Default Feature Templates available
# 6. Delete all Non-Default Feature templates
# 7. Create AAA Template for Controller devices
# 8. Create System Template for Controller devices
# 9. Create VPN template for Controller devices - VPN 0
# 10. Create VPN template for Controller devices - VPN 512
# 11. Create VPN Interface template for Controller devices - VPN 0
# 12. Create VPN Interface template for Controller devices - VPN 512
# 13. Create example Device Template for Controller
# 14. Attach example Device Template for Controller


- name: Testing playbook to verify cisco.catalystwan.device_templates module operations
  hosts: localhost
  gather_facts: false
  vars_files:
    - configuration_file_dev_vars.yml
  vars:
    manager_authentication: &manager_authentication
      url: "{{ (manager_instances | first).mgmt_public_ip }}"
      username: "{{ (manager_instances | first).admin_username }}"
      password: "{{ (manager_instances | first).admin_password }}"
  tasks:
    - name: 1. Get all Device Templates that are not attached to any device
      cisco.catalystwan.device_templates_info:
        filters:
          devices_attached: 0
          factory_default: false
        manager_credentials:
          <<: *manager_authentication
      register: device_templates

    - name: 2. Delete selected Device Templates from Manager
      cisco.catalystwan.device_templates:
        state: absent
        template_name: "{{ device_template.name }}"
        manager_credentials:
          <<: *manager_authentication
      loop: "{{ device_templates.templates_info | default([], True) }}"
      loop_control:
        loop_var: device_template
      when: device_templates.templates_info | length > 0

    - name: 3. Backup running-config from devices, store in default backup dir (in CWD)
      cisco.catalystwan.devices_info:
        backup: true
        manager_credentials:
          <<: *manager_authentication
      register: backup_info

    - name: 4. Using backup files, create CLI templates for each device available
      cisco.catalystwan.cli_templates:
        state: present
        template_name: "backup-template-{{ device_item.filename }}"
        template_description: "Template for {{ device_item.hostname }} created from backup file."
        config_file: "{{ device_item.backup_path }}"
        device_model: "{% if 'cedge' in device_item.hostname %}vedge-C8000V\
                       {% elif 'Controller' in device_item.hostname %}vsmart{% elif 'Manager' in device_item.hostname %}vmanage\
                       {% elif 'Validator' in device_item.hostname %}vedge-cloud{% endif %}"
        manager_credentials:
          <<: *manager_authentication
      loop: "{{ backup_info.backup_paths }}"
      loop_control:
        loop_var: device_item
      when: backup_info.backup_paths | length > 0

    - name: 5. Get all Non-Default Feature Templates available
      cisco.catalystwan.feature_templates_info:
        filters:
          factory_default: false
          devices_attached: 0
        manager_credentials:
          <<: *manager_authentication
      register: feature_templates

    - name: 6. Delete all Non-Default Feature templates
      cisco.catalystwan.feature_templates:
        state: absent
        template_name: "{{ template.name }}"
        manager_credentials:
          <<: *manager_authentication
      loop: "{{ feature_templates.templates_info | default([], true) }}"
      loop_control:
        loop_var: template
        label: "template: {{ template.name }}"

    # Create now all Feature Templates that are necessary to form minimal Device Template, and attach this template
    # These will be applicable for Controller devices

    - name: 7. Create AAA Template for Controller devices
      cisco.catalystwan.feature_templates:
        state: present
        template_name: "AAA_for_Controller"
        template_description: "AAA Template for testing"
        device_models: vsmart
        debug: true
        aaa:
          auth_fallback: false
          admin_auth_order: false
          accounting: false
          usergroup:
            - name: basic
              task:
                - mode: system
                  permission:
                    - read
                - mode: interface
                  permission:
                    - read
            - name: netadmin
              task: []
            - name: operator
              task:
                - mode: system
                  permission:
                    - read
                - mode: interface
                  permission:
                    - read
                - mode: policy
                  permission:
                    - read
                - mode: routing
                  permission:
                    - read
                - mode: security
                  permission:
                    - read
          user:
            - name: admin
              password: Cisco#123@ViptelaXDD
        manager_credentials:
          <<: *manager_authentication

    - name: 8. Create System Template for Controller devices
      cisco.catalystwan.feature_templates:
        state: present
        template_name: "System_for_Controller"
        template_description: "System Template for testing"
        device_specific_variables:
          site_id: "side_id_variable"
        device_models: vsmart
        debug: true
        system_controller:
          site_id: device_specific_variable
        manager_credentials:
          <<: *manager_authentication

    # Now for vpn and vpn interfaces, and then attach device template with device specific variables
    - name: 9. Create VPN template for Controller devices - VPN 0
      cisco.catalystwan.feature_templates:
        state: present
        template_name: "VPN_0_for_Controller"
        template_description: "VPN_0 Template for testing"
        device_models: vsmart
        debug: true
        vpn_controller:
          vpn_id: 0
        manager_credentials:
          <<: *manager_authentication

    - name: 10. Create VPN template for Controller devices - VPN 512
      cisco.catalystwan.feature_templates:
        state: present
        template_name: "VPN_512_for_Controller"
        template_description: "VPN_512 Template for testing"
        device_models: vsmart
        debug: true
        vpn_controller:
          vpn_id: 512
        manager_credentials:
          <<: *manager_authentication

    - name: 11. Create VPN Interface template for Controller devices - VPN 0
      cisco.catalystwan.feature_templates:
        state: present
        template_name: "VPN_0_Interface_for_Controller"
        template_description: "VPN_0 Interface Template for testing"
        device_models: vsmart
        debug: true
        vpn_controller_interface:
          if_name: eth1
          shutdown: false
          dhcp_ipv4_client: true
          dhcp: true
          dns: true
          icmp: true
          sshd: true
          netconf: true
          ntp: false
          stun: false
        manager_credentials:
          <<: *manager_authentication

    - name: 12. Create VPN Interface template for Controller devices - VPN 512
      cisco.catalystwan.feature_templates:
        state: present
        template_name: "VPN_512_Interface_for_Controller"
        template_description: "VPN_512 Interface Template for testing"
        device_models: vsmart
        debug: true
        vpn_controller_interface:
          if_name: eth0
          shutdown: false
          dhcp_ipv4_client: true
        manager_credentials:
          <<: *manager_authentication

    - name: 13. Create example Device Template for Controller
      cisco.catalystwan.device_templates:
        state: present
        template_name: "Controller-test-device-template"
        template_description: "Controller-test-device-template"
        device_type: vsmart
        general_templates:
          - name: "System_for_Controller"
            subtemplates:
              - "Factory_Default_Logging_Template_V01"
          - name: "AAA_for_Controller"
          - name: "Factory_Default_Controller_OMP_Template"
          - name: "Factory_Default_Controller_Manager_Security_Template"
          - name: "VPN_0_for_Controller"
            subtemplates:
              - "VPN_0_Interface_for_Controller"
          - name: "VPN_512_for_Controller"
            subtemplates:
              - "VPN_512_Interface_for_Controller"
        manager_credentials:
          <<: *manager_authentication

    - name: 14. Attach example Device Template for Controller
      cisco.catalystwan.device_templates:
        state: attached
        template_name: "Controller-test-device-template"
        device_type: vsmart
        hostname: "acich-rg-Controller"
        device_specific_vars:
          - "//system/site-id": "333"
          - "//system/host-name": "acich-rg-Controller"
          - "//system/system-ip": "192.168.2.1"
          - "//system/ipv6-strict-control": false
        manager_credentials:
          <<: *manager_authentication
